#~
#~  sweetpotato execution plan 
#~           >>>  http://www.telekommunisten.net/sweetpotato

sweetpotato:

    init:
        # deadSwap configuration
        - token:

        # STANDARD SETTINGS, YOU WILL NEED TO CHANGE THESE

            # the control phone is the phone of the
            # operator, it can add sleeper agents by
            # send the number (with a + prefix) to
            # the deadSwap Gateway.
            # The control phone can not participate
            # in the network because messages from it
            # are never forwarded
            controlSmsNumber: "+491632866163" 

            #
            # the workDir is where deadSwap stores its
            # files, the dead swap process will need write
            # permissions here
            workDir: "/home/dk/.deadSwap"

            # this is the amount of time in minutes
            # after a rabbit has last recieved a message
            # from an agent that deadSwap waits before
            # making the rabbit a sleeper
            agentMaturity: 15

            # only use sms messages from numbers
            # starting with this prefix
            smsInPrefix: "+"


        # ADVANCED SETTINGS, YOU WONT NEED TO CHANGE THESE

            sendSmsTarget: sendSms
            rabbitSmsNumber: "{{controlSmsNumber}}"

        # verify working directory exists and is writable
        - workfile:
            path: "{{workDir}}/README"
            do:
                - write: "~# deadSwap.net"   
                - write: "     >>> by Telekommunisten"
        - echo: "~# DEADSWAP ACTIVATED @~~/~"

    deadSwap:
        - require: init
        - lock:
            loop:
                - do: QueueIncomingMessages   # Pull SMS messages from GSM
                - do: RegisterSleepers        # Add new sleepers from control
                - do: ProcessQueue            # Process Queue

    ProcessQueue:
        - require: init
        - do: ForwardAgentMessages    # Retire agent, rabbit is sleeper
        - do: ForwardSleeperMessages  # Unretire agent, demote sleeper
        - do: ForwardRabbitMessages   # Deploy agents

    #~~
    QueueIncomingMessages:
        - require: init
        # transfer messages from sms inbox to queue directory
        - db:
            type: smsinbox
            read:
                target: _saveSms
                delete: True
                prefix: "{{smsInPrefix}}"
                fields:
                    id: smsId
                    text: smsText
                    caller_id_number: smsNumber

    _saveSms:
        - echo: "Recieved SMS from {{smsNumber}}"
        - lock:
            key: deadSwapSmsInQueue
            workfile:
                path: "{{workDir}}/smsIn/{{smsNumber}}/{{smsId}}.sms"
                overwrite: True
                do:
                    - write: "{{smsText}}"
    #~~
    RegisterSleepers:
        - require: init
        - token:
            searchNumber: "{{controlSmsNumber}}"
            searchTarget: "_registerSleeper"
        - do: _searchInQueue

    _registerSleeper:
        # the control phone can add new sleepers by sending their sms number
        # to deadSwap.
        - db:
            path: "{{workDir}}/smsIn/{{controlSmsNumber}}/{{foundName}}"
            type: file
            read:
                fields:
                    content: sleeperSmsNumber 
        - echo: "Registering {{sleeperSmsNumber}} as sleeper"
        - lock:
            key: deadSwapSmsInQueue
            do:
                - workfile:
                    overwrite: True
                    path: "{{workDir}}/sleepers/{{sleeperSmsNumber}}"
                    do:
                        - write: "{{controlSmsNumber}}"
                - unlink: "{{workDir}}/smsIn/{{controlSmsNumber}}/{{foundName}}"

    #~~
    ForwardAgentMessages:
        - require: init
        - token:
            senderRole: agent
        - lock:
            db:
                path: "{{workDir}}/agents"
                type: dir
                read:
                    target: _forEachAgent
                    fields:
                        name: fromSmsNumber

    _forEachAgent:
        # get rabbit number 
        - db:
            path: "{{workDir}}/agents/{{fromSmsNumber}}"
            type: file
            read:
                fields:
                    content: toSmsNumber
        # deliver agent message to rabbit
        - token:
            searchNumber: "{{fromSmsNumber}}"
            searchTarget: _retireAgent
        - do: _searchInQueue
    
    _retireAgent:
        - echo: "messsage from agent {{fromSmsNumber}} to rabbit {{toSmsNumber}}"
        - do: _forwardMessage
        # promote rabbit to sleeper
        - workfile:
            path: "{{workDir}}/sleepers/{{toSmsNumber}}"
            overwrite: true
            # save agent number for follow-up
            do:
                - write: "{{fromSmsNumber}}"
        - unlink: "{{workDir}}/agents/{{fromSmsNumber}}"

    #~~
    ForwardSleeperMessages:
        - require: init
        - token:
            senderRole: rabbit (sleeper)
        - lock:
            db:
                path: "{{workDir}}/sleepers"
                type: dir
                read:
                    target: _forEachSleeper
                    fields:
                        name: fromSmsNumber

    _forEachSleeper:
        # get agent number 
        - db:
            path: "{{workDir}}/sleepers/{{fromSmsNumber}}"
            type: file
            read:
                fields:
                    content: toSmsNumber
        # deliver sleeper message to agent
        - token:
            searchNumber: "{{fromSmsNumber}}"
            searchTarget: _demoteSleeper
        - do: _searchInQueue

    _demoteSleeper:
        - echo: "messsage from rabbit {{fromSmsNumber}} to agent {{toSmsNumber}}"
        - do: _forwardMessage
        # unretire agent
        - workfile:
            path: "{{workDir}}/agents/{{toSmsNumber}}"
            overwrite: true
            # save rabbit number for follow-up
            do:
                - write: "{{fromSmsNumber}}"
        - unlink: "{{workDir}}/sleepers/{{fromSmsNumber}}"

    #~~
    ForwardRabbitMessages:
        - require: init
        - token:
            senderRole: rabbit
        - lock:
            - db:
                path: "{{workDir}}/smsIn"
                type: dir
                read:
                    target: _forEachRabbit
                    fields:
                        name: fromSmsNumber

    _forEachRabbit:
        - lock:
            # Search for a sleeper
            - db:
                path: "{{workDir}}/sleepers"
                type: dirshift
                age: "{{agentMaturity}}"
                read:
                    target: _deployAgent
                    fields:
                        name: toSmsNumber

    _deployAgent:
        - echo: "assign agent {{toSmsNumber}} to rabbit {{fromSmsNumber}}"
        # Send Rabbit Message To Sleeper
        - token:
            searchNumber: "{{fromSmsNumber}}"
            searchTarget: "_forwardMessage"
        - do: _searchInQueue
        # Deploy sleeper as agent
        - do:
            - workfile:
                path: "{{workDir}}/agents/{{toSmsNumber}}"
                overwrite: True
                # save rabbit number for follow-up
                do:
                    - write: "{{fromSmsNumber}}"
            - unlink: "{{workDir}}/sleepers/{{toSmsNumber}}"

###
    _searchInQueue:
        - lock:
            key: deadSwapSmsInQueue
            do:
                - db:
                    path: "{{workDir}}/smsIn/{{searchNumber}}"
                    type: dir
                    read:
                        target: "{{searchTarget}}"
                        fields:
                            name: foundName
                - rmdir: "{{workDir}}/smsIn/{{searchNumber}}"

    _forwardMessage:
        - echo: "sending SMS to {{toSmsNumber}}"
        - lock:
            - db:
                type: file
                path: "{{workDir}}/smsIn/{{searchNumber}}/{{foundName}}"
                read:
                    fields:
                        content: smsText
            - do: "{{sendSmsTarget}}"
            - unlink: "{{workDir}}/smsIn/{{searchNumber}}/{{foundName}}"

    sendSms:
            - sendsms:
                to: "{{toSmsNumber}}"
                text: "{{smsText}}"

#~
#~ TEST TARGETS
#~~~

    # System Test
    testSystem:
        - require: init
        - do: testCleanUp
        - token:
            agentMaturity: 0
            sendSmsTarget: testMockSendSms

        - echo: ":: Sleeper +86 registered"
        - do: testNewSleeper
        - do: ProcessQueue

        - echo: ":: Message from rabbit +99 sent to agent +86"
        - echo: ":: Sleeper +86 becomes agent for rabbit +99"
        - do: testMessageFrom99
        - do: ProcessQueue

        - echo: ":: Message from agent +86 sent to rabbit +99"
        - echo: ":: Rabbit +99 becomes a sleeper"
        - do: testMessageFrom86
        - do: ProcessQueue

        - echo: ":: Message from rabbit +99 sent to agent +86"
        - echo: ":: Sleeper +99 becomes a rabbit again, agent +86 unretired"
        - do: testMessageFrom99
        - do: ProcessQueue

        - echo: ":: Message from agent +86 sent to rabbit +99"
        - echo: ":: Rabbit +99 becomes a sleeper again"
        - do: testMessageFrom86
        - do: ProcessQueue

        - echo: ":: Message from agent +86 sent to rabbit +99"
        - echo: ":: Sleeper +99 becomes agent for rabbit +86"
        - do: testMessageFrom86
        - do: ProcessQueue
        - do: testCleanUp

    # Clean Up
    testCleanUp:
        - require: init
        - unlink: "{{workDir}}/agents/+99"

    # Mock sendSms
    testMockSendSms:
            - echo: "<sms>"
            - echo: "to: {{toSmsNumber}}"
            - echo: "{{smsText}}"
            - echo: "</sms>"

    # Test New Sleeper
    testNewSleeper:
        - require: init
        - workfile:
            path: "{{workDir}}/sleepers/+86"
            do:
                - write: "{{controlSmsNumber}}"
 
    # Test Rabbit Message
    testMessageFrom99:
        - require: init
        - workfile:
            path: "{{workDir}}/smsIn/+99/rabbit.sms"
            do:
                - write: "h€l1ø 86"

    # Test Agent Message
    testMessageFrom86:
        - require: init
        - workfile:
            path: "{{workDir}}/smsIn/+86/agent.sms"
            overwrite: True
            do:
                - write: "hi→ 99!"

    # Test SMS Sending
    testSms:
        - require: init
        - echo: "{{controlSmsNumber}}"
        - echo: "W€£cøme To dæd$wap"
        - token:
            toSmsNumber: "{{controlSmsNumber}}"
            smsText: "W€£cøme To dæd$wap"
        - do: "{{sendSmsTarget}}" 

